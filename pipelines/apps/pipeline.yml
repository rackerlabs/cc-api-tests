resources:
- name: 15m
  type: time
  source: {interval: 15m}
- name: cc-api-tests
  type: git
  source:
    branch: master
    private_key: ((GITHUB_PRIVATE_KEY))
    uri: https://github.com/rackerlabs/cc-api-tests.git
- name: cc-api-tests-bucket
  type: s3
  source:
    bucket: ((BUCKET))
    region_name: ((REGION))
    versioned_file: ((PIPELINE)).txt
    access_key_id: ((CC_API_TEST_ACCESS_KEY))
    secret_access_key: ((CC_API_TEST_SECRET_ACCESS_KEY))
jobs:
- name: setup
  on_failure:
    task: cleanup
    file: cc-api-tests/tasks/cleanup/task.yml
    params:
      PIPELINE: ((PIPELINE))
  serial: true
  serial_groups: [((PIPELINE))]
  plan:
  - get: 15m
    trigger: true
  - get: cc-api-tests
    trigger: true
  - task: auth
    file: cc-api-tests/tasks/auth/task.yml
    params:
      USERNAME: ((USERNAME))
      PASSWORD: ((PASSWORD))
      CLIENT_ID: ((CLIENT_ID))
      LOGIN_URL: ((LOGIN_URL))
      CF_API_URL: ((CF_API_URL))
      PIPELINE: ((PIPELINE))
      DATADOG_API_KEY: ((DATADOG_API_KEY))
      FOUNDATION: ((FOUNDATION))
    on_failure:
      task: failure-notify
      file: cc-api-tests/tasks/on_failure/task.yml
      params:
        PIPELINE: ((PIPELINE))
        DATADOG_API_KEY: ((DATADOG_API_KEY))
        FOUNDATION: ((FOUNDATION))
        TASK: auth
  - aggregate:
    - task: create-a-shared-domain
      file: cc-api-tests/tasks/create_a_shared_domain/task.yml
      params:
        PIPELINE: ((PIPELINE))
        DATADOG_API_KEY: ((DATADOG_API_KEY))
        FOUNDATION: ((FOUNDATION))
      on_failure:
        task: failure-notify
        file: cc-api-tests/tasks/on_failure/task.yml
        params:
          PIPELINE: ((PIPELINE))
          DATADOG_API_KEY: ((DATADOG_API_KEY))
          FOUNDATION: ((FOUNDATION))
          TASK: create-a-shared-domain
    - task: creating-an-organization
      file: cc-api-tests/tasks/creating_an_organization/task.yml
      params:
        USERNAME: ((USERNAME))
        PASSWORD: ((PASSWORD))
        CF_API_URL: ((CF_API_URL))
        PIPELINE: ((PIPELINE))
        DATADOG_API_KEY: ((DATADOG_API_KEY))
        FOUNDATION: ((FOUNDATION))
      on_failure:
        task: failure-notify
        file: cc-api-tests/tasks/on_failure/task.yml
        params:
          PIPELINE: ((PIPELINE))
          DATADOG_API_KEY: ((DATADOG_API_KEY))
          FOUNDATION: ((FOUNDATION))
          TASK: creating-an-organization
  - task: creating-a-space
    file: cc-api-tests/tasks/creating_a_space/task.yml
    params:
      PIPELINE: ((PIPELINE))
      DATADOG_API_KEY: ((DATADOG_API_KEY))
      FOUNDATION: ((FOUNDATION))
    on_failure:
      task: failure-notify
      file: cc-api-tests/tasks/on_failure/task.yml
      params:
        PIPELINE: ((PIPELINE))
        DATADOG_API_KEY: ((DATADOG_API_KEY))
        FOUNDATION: ((FOUNDATION))
        TASK: creating-a-space
  - task: creating-a-source-app
    file: cc-api-tests/tasks/creating_a_source_app/task.yml
    params:
      PIPELINE: ((PIPELINE))
      DATADOG_API_KEY: ((DATADOG_API_KEY))
      FOUNDATION: ((FOUNDATION))
    on_failure:
      task: failure-notify
      file: cc-api-tests/tasks/on_failure/task.yml
      params:
        PIPELINE: ((PIPELINE))
        DATADOG_API_KEY: ((DATADOG_API_KEY))
        FOUNDATION: ((FOUNDATION))
        TASK: creating-a-source-app
  - task: creating-a-route
    file: cc-api-tests/tasks/creating_a_route/task.yml
    params:
      PIPELINE: ((PIPELINE))
      DATADOG_API_KEY: ((DATADOG_API_KEY))
      FOUNDATION: ((FOUNDATION))
    on_failure:
      task: failure-notify
      file: cc-api-tests/tasks/on_failure/task.yml
      params:
        PIPELINE: ((PIPELINE))
        DATADOG_API_KEY: ((DATADOG_API_KEY))
        FOUNDATION: ((FOUNDATION))
        TASK: creating-a-route
  - task: creating-a-user-provided-service-instance
    file: cc-api-tests/tasks/creating_a_user_provided_service_instance/task.yml
    params:
      PIPELINE: ((PIPELINE))
      DATADOG_API_KEY: ((DATADOG_API_KEY))
      FOUNDATION: ((FOUNDATION))
    on_failure:
      task: failure-notify
      file: cc-api-tests/tasks/on_failure/task.yml
      params:
        PIPELINE: ((PIPELINE))
        DATADOG_API_KEY: ((DATADOG_API_KEY))
        FOUNDATION: ((FOUNDATION))
        TASK: creating-a-user-provided-service-instance
  - task: rollup-input
    file: cc-api-tests/tasks/rollup_input/task.yml
    params:
      PIPELINE: ((PIPELINE))
  - put: cc-api-tests-bucket
    params:
      file: cc-api-output-rollup-input/((PIPELINE)).txt

- name: test
  on_failure:
    task: cleanup
    file: cc-api-tests/tasks/cleanup/task.yml
    input_mapping: {cc-api-output-creating-an-organization: cc-api-tests-bucket}
    params:
      PIPELINE: ((PIPELINE))
  serial: true
  serial_groups: [((PIPELINE))]
  plan:
  - get: cc-api-tests
  - get: cc-api-tests-bucket
    trigger: true
    passed:
    - setup
  - task: auth
    file: cc-api-tests/tasks/auth/task.yml
    params:
      USERNAME: ((USERNAME))
      PASSWORD: ((PASSWORD))
      CLIENT_ID: ((CLIENT_ID))
      LOGIN_URL: ((LOGIN_URL))
      CF_API_URL: ((CF_API_URL))
      PIPELINE: ((PIPELINE))
      DATADOG_API_KEY: ((DATADOG_API_KEY))
      FOUNDATION: ((FOUNDATION))
    on_failure:
      task: failure-notify
      file: cc-api-tests/tasks/on_failure/task.yml
      params:
        PIPELINE: ((PIPELINE))
        DATADOG_API_KEY: ((DATADOG_API_KEY))
        FOUNDATION: ((FOUNDATION))
        TASK: auth
  - task: creating-an-app
    file: cc-api-tests/tasks/creating_an_app/task.yml
    params:
      PIPELINE: ((PIPELINE))
      DATADOG_API_KEY: ((DATADOG_API_KEY))
      FOUNDATION: ((FOUNDATION))
    on_failure:
      task: failure-notify
      file: cc-api-tests/tasks/on_failure/task.yml
      params:
        PIPELINE: ((PIPELINE))
        DATADOG_API_KEY: ((DATADOG_API_KEY))
        FOUNDATION: ((FOUNDATION))
        TASK: creating-an-app
    input_mapping: {cc-api-output-creating-a-space: cc-api-tests-bucket}
  - task: uploads-the-bits-for-an-app
    file: cc-api-tests/tasks/uploads_the_bits_for_an_app/task.yml
    params:
      PIPELINE: ((PIPELINE))
      DATADOG_API_KEY: ((DATADOG_API_KEY))
      FOUNDATION: ((FOUNDATION))
    on_failure:
      task: failure-notify
      file: cc-api-tests/tasks/on_failure/task.yml
      params:
        PIPELINE: ((PIPELINE))
        DATADOG_API_KEY: ((DATADOG_API_KEY))
        FOUNDATION: ((FOUNDATION))
        TASK: uploads-the-bits-for-an-app
  - task: updating-an-app
    file: cc-api-tests/tasks/updating_an_app/task.yml
    params:
      PIPELINE: ((PIPELINE))
      DATADOG_API_KEY: ((DATADOG_API_KEY))
      FOUNDATION: ((FOUNDATION))
    on_failure:
      task: failure-notify
      file: cc-api-tests/tasks/on_failure/task.yml
      params:
        PIPELINE: ((PIPELINE))
        DATADOG_API_KEY: ((DATADOG_API_KEY))
        FOUNDATION: ((FOUNDATION))
        TASK: updating-an-app
  - aggregate:
    - task: get-the-instance-information-for-a-started-app
      file: cc-api-tests/tasks/get_the_instance_information_for_a_started_app/task.yml
      params:
        PIPELINE: ((PIPELINE))
        DATADOG_API_KEY: ((DATADOG_API_KEY))
        FOUNDATION: ((FOUNDATION))
      on_failure:
        task: failure-notify
        file: cc-api-tests/tasks/on_failure/task.yml
        params:
          PIPELINE: ((PIPELINE))
          DATADOG_API_KEY: ((DATADOG_API_KEY))
          FOUNDATION: ((FOUNDATION))
          TASK: get-the-instance-information-for-a-started-app
    - task: get-the-env-for-an-app
      file: cc-api-tests/tasks/get_the_env_for_an_app/task.yml
      params:
        PIPELINE: ((PIPELINE))
        DATADOG_API_KEY: ((DATADOG_API_KEY))
        FOUNDATION: ((FOUNDATION))
      on_failure:
        task: failure-notify
        file: cc-api-tests/tasks/on_failure/task.yml
        params:
          PIPELINE: ((PIPELINE))
          DATADOG_API_KEY: ((DATADOG_API_KEY))
          FOUNDATION: ((FOUNDATION))
          TASK: get-the-env-for-an-app
    - task: get-detailed-stats-for-a-started-app
      file: cc-api-tests/tasks/get_detailed_stats_for_a_started_app/task.yml
      params:
        PIPELINE: ((PIPELINE))
        DATADOG_API_KEY: ((DATADOG_API_KEY))
        FOUNDATION: ((FOUNDATION))
      on_failure:
        task: failure-notify
        file: cc-api-tests/tasks/on_failure/task.yml
        params:
          PIPELINE: ((PIPELINE))
          DATADOG_API_KEY: ((DATADOG_API_KEY))
          FOUNDATION: ((FOUNDATION))
          TASK: get-detailed-stats-for-a-started-app
    - task: downloads-the-bits-for-an-app
      file: cc-api-tests/tasks/downloads_the_bits_for_an_app/task.yml
      params:
        PIPELINE: ((PIPELINE))
        DATADOG_API_KEY: ((DATADOG_API_KEY))
        FOUNDATION: ((FOUNDATION))
      on_failure:
        task: failure-notify
        file: cc-api-tests/tasks/on_failure/task.yml
        params:
          PIPELINE: ((PIPELINE))
          DATADOG_API_KEY: ((DATADOG_API_KEY))
          FOUNDATION: ((FOUNDATION))
          TASK: downloads-the-bits-for-an-app
    - task: downloads-the-staged-droplet-for-an-app
      file: cc-api-tests/tasks/downloads_the_staged_droplet_for_an_app/task.yml
      params:
        PIPELINE: ((PIPELINE))
        DATADOG_API_KEY: ((DATADOG_API_KEY))
        FOUNDATION: ((FOUNDATION))
      on_failure:
        task: failure-notify
        file: cc-api-tests/tasks/on_failure/task.yml
        params:
          PIPELINE: ((PIPELINE))
          DATADOG_API_KEY: ((DATADOG_API_KEY))
          FOUNDATION: ((FOUNDATION))
          TASK: downloads-the-staged-droplet-for-an-app
    - task: list-all-apps
      file: cc-api-tests/tasks/list_all_apps/task.yml
      params:
        PIPELINE: ((PIPELINE))
        DATADOG_API_KEY: ((DATADOG_API_KEY))
        FOUNDATION: ((FOUNDATION))
      on_failure:
        task: failure-notify
        file: cc-api-tests/tasks/on_failure/task.yml
        params:
          PIPELINE: ((PIPELINE))
          DATADOG_API_KEY: ((DATADOG_API_KEY))
          FOUNDATION: ((FOUNDATION))
          TASK: list-all-apps
      input_mapping: {cc-api-output-creating-a-space: cc-api-tests-bucket}
    - task: copy-the-app-bits-for-an-app
      file: cc-api-tests/tasks/copy_the_app_bits_for_an_app/task.yml
      params:
        PIPELINE: ((PIPELINE))
        DATADOG_API_KEY: ((DATADOG_API_KEY))
        FOUNDATION: ((FOUNDATION))
      on_failure:
        task: failure-notify
        file: cc-api-tests/tasks/on_failure/task.yml
        params:
          PIPELINE: ((PIPELINE))
          DATADOG_API_KEY: ((DATADOG_API_KEY))
          FOUNDATION: ((FOUNDATION))
          TASK: copy-the-app-bits-for-an-app
      input_mapping: {cc-api-output-creating-a-source-app: cc-api-tests-bucket}
    - task: get-app-summary
      file: cc-api-tests/tasks/get_app_summary/task.yml
      params:
        PIPELINE: ((PIPELINE))
        DATADOG_API_KEY: ((DATADOG_API_KEY))
        FOUNDATION: ((FOUNDATION))
      on_failure:
        task: failure-notify
        file: cc-api-tests/tasks/on_failure/task.yml
        params:
          PIPELINE: ((PIPELINE))
          DATADOG_API_KEY: ((DATADOG_API_KEY))
          FOUNDATION: ((FOUNDATION))
          TASK: get-app-summary
    - task: list-all-routes-for-the-app
      file: cc-api-tests/tasks/list_all_routes_for_the_app/task.yml
      params:
        PIPELINE: ((PIPELINE))
        DATADOG_API_KEY: ((DATADOG_API_KEY))
        FOUNDATION: ((FOUNDATION))
      on_failure:
        task: failure-notify
        file: cc-api-tests/tasks/on_failure/task.yml
        params:
          PIPELINE: ((PIPELINE))
          DATADOG_API_KEY: ((DATADOG_API_KEY))
          FOUNDATION: ((FOUNDATION))
          TASK: list-all-routes-for-the-app
    - task: list-all-service-bindings-for-the-app
      file: cc-api-tests/tasks/list_all_service_bindings_for_the_app/task.yml
      params:
        PIPELINE: ((PIPELINE))
        DATADOG_API_KEY: ((DATADOG_API_KEY))
        FOUNDATION: ((FOUNDATION))
      on_failure:
        task: failure-notify
        file: cc-api-tests/tasks/on_failure/task.yml
        params:
          PIPELINE: ((PIPELINE))
          DATADOG_API_KEY: ((DATADOG_API_KEY))
          FOUNDATION: ((FOUNDATION))
          TASK: list-all-service-bindings-for-the-app
    - task: retrieve-a-particular-app
      file: cc-api-tests/tasks/retrieve_a_particular_app/task.yml
      params:
        PIPELINE: ((PIPELINE))
        DATADOG_API_KEY: ((DATADOG_API_KEY))
        FOUNDATION: ((FOUNDATION))
      on_failure:
        task: failure-notify
        file: cc-api-tests/tasks/on_failure/task.yml
        params:
          PIPELINE: ((PIPELINE))
          DATADOG_API_KEY: ((DATADOG_API_KEY))
          FOUNDATION: ((FOUNDATION))
          TASK: retrieve-a-particular-app
    - task: retrieving-permissions-on-a-app
      file: cc-api-tests/tasks/retrieving_permissions_on_a_app/task.yml
      params:
        PIPELINE: ((PIPELINE))
        DATADOG_API_KEY: ((DATADOG_API_KEY))
        FOUNDATION: ((FOUNDATION))
      on_failure:
        task: failure-notify
        file: cc-api-tests/tasks/on_failure/task.yml
        params:
          PIPELINE: ((PIPELINE))
          DATADOG_API_KEY: ((DATADOG_API_KEY))
          FOUNDATION: ((FOUNDATION))
          TASK: retrieving-permissions-on-a-app
  - task: create-a-service-binding
    file: cc-api-tests/tasks/create_a_service_binding/task.yml
    params:
      PIPELINE: ((PIPELINE))
      DATADOG_API_KEY: ((DATADOG_API_KEY))
      FOUNDATION: ((FOUNDATION))
    on_failure:
      task: failure-notify
      file: cc-api-tests/tasks/on_failure/task.yml
      params:
        PIPELINE: ((PIPELINE))
        DATADOG_API_KEY: ((DATADOG_API_KEY))
        FOUNDATION: ((FOUNDATION))
        TASK: create-a-service-binding
    input_mapping: {cc-api-output-creating-a-user-provided-service-instance: cc-api-tests-bucket}
  - task: restage-an-app
    file: cc-api-tests/tasks/restage_an_app/task.yml
    params:
      PIPELINE: ((PIPELINE))
      DATADOG_API_KEY: ((DATADOG_API_KEY))
      FOUNDATION: ((FOUNDATION))
    on_failure:
      task: failure-notify
      file: cc-api-tests/tasks/on_failure/task.yml
      params:
        PIPELINE: ((PIPELINE))
        DATADOG_API_KEY: ((DATADOG_API_KEY))
        FOUNDATION: ((FOUNDATION))
        TASK: restage-an-app
  - task: associate-route-with-the-app
    file: cc-api-tests/tasks/associate_route_with_the_app/task.yml
    params:
      PIPELINE: ((PIPELINE))
      DATADOG_API_KEY: ((DATADOG_API_KEY))
      FOUNDATION: ((FOUNDATION))
    on_failure:
      task: failure-notify
      file: cc-api-tests/tasks/on_failure/task.yml
      params:
        PIPELINE: ((PIPELINE))
        DATADOG_API_KEY: ((DATADOG_API_KEY))
        FOUNDATION: ((FOUNDATION))
        TASK: associate-route-with-the-app
    input_mapping: {cc-api-output-creating-a-route: cc-api-tests-bucket}
  - task: remove-route-from-the-app
    file: cc-api-tests/tasks/remove_route_from_the_app/task.yml
    params:
      PIPELINE: ((PIPELINE))
      DATADOG_API_KEY: ((DATADOG_API_KEY))
      FOUNDATION: ((FOUNDATION))
    on_failure:
      task: failure-notify
      file: cc-api-tests/tasks/on_failure/task.yml
      params:
        PIPELINE: ((PIPELINE))
        DATADOG_API_KEY: ((DATADOG_API_KEY))
        FOUNDATION: ((FOUNDATION))
        TASK: remove-route-from-the-app
    input_mapping: {cc-api-output-creating-a-route: cc-api-tests-bucket}
  - task: terminate-the-running-app-instance-at-the-given-index
    file: cc-api-tests/tasks/terminate_the_running_app_instance_at_the_given_index/task.yml
    params:
      PIPELINE: ((PIPELINE))
      DATADOG_API_KEY: ((DATADOG_API_KEY))
      FOUNDATION: ((FOUNDATION))
    on_failure:
      task: failure-notify
      file: cc-api-tests/tasks/on_failure/task.yml
      params:
        PIPELINE: ((PIPELINE))
        DATADOG_API_KEY: ((DATADOG_API_KEY))
        FOUNDATION: ((FOUNDATION))
        TASK: terminate-the-running-app-instance-at-the-given-index
  - task: uploads-the-droplet-for-an-app
    file: cc-api-tests/tasks/uploads_the_droplet_for_an_app/task.yml
    params:
      PIPELINE: ((PIPELINE))
      DATADOG_API_KEY: ((DATADOG_API_KEY))
      FOUNDATION: ((FOUNDATION))
    on_failure:
      task: failure-notify
      file: cc-api-tests/tasks/on_failure/task.yml
      params:
        PIPELINE: ((PIPELINE))
        DATADOG_API_KEY: ((DATADOG_API_KEY))
        FOUNDATION: ((FOUNDATION))
        TASK: uploads-the-droplet-for-an-app
  - task: remove-service-binding-from-the-app
    file: cc-api-tests/tasks/remove_service_binding_from_the_app/task.yml
    params:
      PIPELINE: ((PIPELINE))
      DATADOG_API_KEY: ((DATADOG_API_KEY))
      FOUNDATION: ((FOUNDATION))
    on_failure:
      task: failure-notify
      file: cc-api-tests/tasks/on_failure/task.yml
      params:
        PIPELINE: ((PIPELINE))
        DATADOG_API_KEY: ((DATADOG_API_KEY))
        FOUNDATION: ((FOUNDATION))
        TASK: remove-service-binding-from-the-app
  - task: delete-a-particular-app
    file: cc-api-tests/tasks/delete_a_particular_app/task.yml
    params:
      PIPELINE: ((PIPELINE))
      DATADOG_API_KEY: ((DATADOG_API_KEY))
      FOUNDATION: ((FOUNDATION))
    on_failure:
      task: failure-notify
      file: cc-api-tests/tasks/on_failure/task.yml
      params:
        PIPELINE: ((PIPELINE))
        DATADOG_API_KEY: ((DATADOG_API_KEY))
        FOUNDATION: ((FOUNDATION))
        TASK: delete-a-particular-app
  - task: rollup-input-apps-test
    file: cc-api-tests/tasks/rollup_input_apps_test/task.yml
    params:
      PIPELINE: ((PIPELINE))
  - put: cc-api-tests-bucket
    params:
      file: cc-api-output-rollup-input/((PIPELINE)).txt

- name: teardown
  on_failure:
    task: cleanup
    file: cc-api-tests/tasks/cleanup/task.yml
    input_mapping: {cc-api-output-creating-an-organization: cc-api-tests-bucket}
    params:
      PIPELINE: ((PIPELINE))
  serial: true
  serial_groups: [((PIPELINE))]
  plan:
  - get: cc-api-tests
  - get: cc-api-tests-bucket
    trigger: true
    passed:
    - test
  - task: auth
    file: cc-api-tests/tasks/auth/task.yml
    params:
      USERNAME: ((USERNAME))
      PASSWORD: ((PASSWORD))
      CLIENT_ID: ((CLIENT_ID))
      LOGIN_URL: ((LOGIN_URL))
      CF_API_URL: ((CF_API_URL))
      PIPELINE: ((PIPELINE))
      DATADOG_API_KEY: ((DATADOG_API_KEY))
      FOUNDATION: ((FOUNDATION))
    on_failure:
      task: failure-notify
      file: cc-api-tests/tasks/on_failure/task.yml
      params:
        PIPELINE: ((PIPELINE))
        DATADOG_API_KEY: ((DATADOG_API_KEY))
        FOUNDATION: ((FOUNDATION))
        TASK: auth
  - task: delete-a-particular-route
    file: cc-api-tests/tasks/delete_a_particular_route/task.yml
    params:
      PIPELINE: ((PIPELINE))
      DATADOG_API_KEY: ((DATADOG_API_KEY))
      FOUNDATION: ((FOUNDATION))
    on_failure:
      task: failure-notify
      file: cc-api-tests/tasks/on_failure/task.yml
      params:
        PIPELINE: ((PIPELINE))
        DATADOG_API_KEY: ((DATADOG_API_KEY))
        FOUNDATION: ((FOUNDATION))
        TASK: delete-a-particular-route
    input_mapping: {cc-api-output-creating-a-route: cc-api-tests-bucket}
  - task: delete-a-particular-source-app
    file: cc-api-tests/tasks/delete_a_particular_source_app/task.yml
    params:
      PIPELINE: ((PIPELINE))
      DATADOG_API_KEY: ((DATADOG_API_KEY))
      FOUNDATION: ((FOUNDATION))
    on_failure:
      task: failure-notify
      file: cc-api-tests/tasks/on_failure/task.yml
      params:
        PIPELINE: ((PIPELINE))
        DATADOG_API_KEY: ((DATADOG_API_KEY))
        FOUNDATION: ((FOUNDATION))
        TASK: delete-a-particular-source-app
    input_mapping: {cc-api-output-creating-a-source-app: cc-api-tests-bucket}
  - task: delete-a-particular-user-provided-service-instance
    file: cc-api-tests/tasks/delete_a_particular_user_provided_service_instance/task.yml
    params:
      PIPELINE: ((PIPELINE))
      DATADOG_API_KEY: ((DATADOG_API_KEY))
      FOUNDATION: ((FOUNDATION))
    on_failure:
      task: failure-notify
      file: cc-api-tests/tasks/on_failure/task.yml
      params:
        PIPELINE: ((PIPELINE))
        DATADOG_API_KEY: ((DATADOG_API_KEY))
        FOUNDATION: ((FOUNDATION))
        TASK: delete-a-particular-user-provided-service-instance
    input_mapping: {cc-api-output-creating-a-user-provided-service-instance: cc-api-tests-bucket}
  - task: delete-a-particular-space
    file: cc-api-tests/tasks/delete_a_particular_space/task.yml
    params:
      PIPELINE: ((PIPELINE))
      DATADOG_API_KEY: ((DATADOG_API_KEY))
      FOUNDATION: ((FOUNDATION))
    on_failure:
      task: failure-notify
      file: cc-api-tests/tasks/on_failure/task.yml
      params:
        PIPELINE: ((PIPELINE))
        DATADOG_API_KEY: ((DATADOG_API_KEY))
        FOUNDATION: ((FOUNDATION))
        TASK: delete-a-particular-space
    input_mapping: {cc-api-output-creating-a-space: cc-api-tests-bucket}
  - task: delete-a-particular-organization
    file: cc-api-tests/tasks/delete_a_particular_organization/task.yml
    params:
      PIPELINE: ((PIPELINE))
      DATADOG_API_KEY: ((DATADOG_API_KEY))
      FOUNDATION: ((FOUNDATION))
    on_failure:
      task: failure-notify
      file: cc-api-tests/tasks/on_failure/task.yml
      params:
        PIPELINE: ((PIPELINE))
        DATADOG_API_KEY: ((DATADOG_API_KEY))
        FOUNDATION: ((FOUNDATION))
        TASK: delete-a-particular-organization
    input_mapping: {cc-api-output-creating-an-organization: cc-api-tests-bucket}
